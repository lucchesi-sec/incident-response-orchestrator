name: Security CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 6 * * 1'  # Weekly security scan

jobs:
  security-analysis:
    name: Security Analysis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache Dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov bandit safety flake8 black isort mypy
    
    - name: Code Quality - Black
      run: black --check --diff .
    
    - name: Code Quality - isort
      run: isort --check-only --diff .
    
    - name: Code Quality - flake8
      run: flake8 .
    
    - name: Type Checking - mypy
      run: mypy incident_response/ || true  # Allow to fail initially
    
    - name: Security Scan - Bandit
      run: |
        bandit -r incident_response/ -f json -o bandit-report.json || true
        bandit -r incident_response/ --severity-level medium
    
    - name: Dependency Scan - Safety
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Run Tests
      run: |
        pytest --cov=incident_response --cov-report=xml --cov-report=html || true
    
    - name: Upload Security Reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ matrix.python-version }}
        path: |
          bandit-report.json
          safety-report.json
          coverage.xml
          htmlcov/
